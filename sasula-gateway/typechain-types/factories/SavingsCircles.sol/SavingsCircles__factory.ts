/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SavingsCircles,
  SavingsCirclesInterface,
} from "../../SavingsCircles.sol/SavingsCircles";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "organizer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "contribution",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "members",
        type: "address[]",
      },
    ],
    name: "CircleCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "round",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "round",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Payout",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "canPayout",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "members",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "contribution",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "periodSeconds",
        type: "uint256",
      },
    ],
    name: "createCircle",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getCircle",
    outputs: [
      {
        internalType: "address",
        name: "organizer",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "contribution",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "periodSeconds",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "members",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "currentIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nextPayoutTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "round",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600160005534801561001557600080fd5b50610c3b806100256000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806361b8ce8c1461006757806364ccecde146100835780637b8ec366146100ab578063b6b55f25146100be578063b90b553b146100d3578063e1152343146100f6575b600080fd5b61007060005481565b6040519081526020015b60405180910390f35b61009661009136600461097a565b610109565b60405161007a99989796959493929190610993565b6100706100b9366004610a49565b6101d9565b6100d16100cc36600461097a565b6103c8565b005b6100e66100e136600461097a565b6105ec565b604051901515815260200161007a565b6100d161010436600461097a565b6106ab565b6000818152600160208181526040808420805493810154600282015460038301546004840180548651818902810189019097528087526001600160a01b0398891699949098169792969195606095859485948594929392919083018282801561019b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161017d575b505050505095508060050154945080600601549350806008015492508060090160009054906101000a900460ff169150509193959799909294969850565b60006001600160a01b0386166102205760405162461bcd60e51b81526020600482015260076024820152660746f6b656e3d360cc1b60448201526064015b60405180910390fd5b600284101561025d5760405162461bcd60e51b815260206004820152600960248201526836b2b6b132b9399e1960b91b6044820152606401610217565b6000831161029e5760405162461bcd60e51b815260206004820152600e60248201526d0636f6e747269627574696f6e3d360941b6044820152606401610217565b603c8210156102e25760405162461bcd60e51b815260206004820152601060248201526f1c195c9a5bd9081d1bdbc81cdb585b1b60821b6044820152606401610217565b6000805490806102f183610af6565b9091555060008181526001602081905260409091208054336001600160a01b031991821617825591810180549092166001600160a01b038a1617909155600281018590556003810184905590915061034d600482018787610902565b506000600582015561035f8342610b0f565b60068201556000600882015560098101805460ff19166001179055604051339083907f1b7faafd587ac3424c216f8622c311882e2f188d4cfe2269a5f19efb2d027cd6906103b6908b90899089908d908d90610b22565b60405180910390a35095945050505050565b6000818152600160205260409020600981015460ff166104155760405162461bcd60e51b8152602060048201526008602482015267696e61637469766560c01b6044820152606401610217565b61041f813361089b565b6104585760405162461bcd60e51b815260206004820152600a6024820152693737ba1036b2b6b132b960b11b6044820152606401610217565b60088101546000908152600782016020908152604080832033845290915290205460ff16156104b35760405162461bcd60e51b8152602060048201526007602482015266616c726561647960c81b6044820152606401610217565b600181015460028201546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610512573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105369190610b8d565b6105765760405162461bcd60e51b81526020600482015260116024820152701d1c985b9cd9995c919c9bdb4819985a5b607a1b6044820152606401610217565b6008810180546000908152600783016020908152604080832033808552925291829020805460ff19166001179055915460028401549151909185917fb7cac5b0031d5e68c72f4b2668a3ac6ac661109e52d629a1c57dae09f882e29a916105e09190815260200190565b60405180910390a45050565b6000818152600160205260408120600981015460ff1661060f5750600092915050565b80600601544210156106245750600092915050565b60005b60048201548110156106a15781600701600083600801548152602001908152602001600020600083600401838154811061066357610663610bb6565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff16610699575060009392505050565b600101610627565b5060019392505050565b60008181526001602052604090206106c2826105ec565b6106fa5760405162461bcd60e51b81526020600482015260096024820152686e6f7420726561647960b81b6044820152606401610217565b60008160040182600501548154811061071557610715610bb6565b6000918252602082200154600484015460028501546001600160a01b03909216935061074091610bcc565b600184015460405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af1158015610797573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bb9190610b8d565b6107f75760405162461bcd60e51b815260206004820152600d60248201526c1d1c985b9cd9995c8819985a5b609a1b6044820152606401610217565b816001600160a01b03168360080154857fb9784fd5c9ad4fac836b13940c6cdb47dff51b96c0d6b74e32b35be81c46f9098460405161083891815260200190565b60405180910390a460018360080160008282546108559190610b0f565b90915550506004830154600584015461086f906001610b0f565b6108799190610be3565b6005840155600383015461088d9042610b0f565b836006018190555050505050565b6000805b60048401548110156108f657826001600160a01b03168460040182815481106108ca576108ca610bb6565b6000918252602090912001546001600160a01b0316036108ee5760019150506108fc565b60010161089f565b50600090505b92915050565b828054828255906000526020600020908101928215610955579160200282015b828111156109555781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190610922565b50610961929150610965565b5090565b5b808211156109615760008155600101610966565b60006020828403121561098c57600080fd5b5035919050565b6001600160a01b038a81168252898116602080840191909152604083018a9052606083018990526101206080840181905288519084018190526000926101408501928a810192855b818110156109f95784518416865294820194938201936001016109db565b5050505050809150508560a08301528460c08301528360e0830152610a2361010083018415159052565b9a9950505050505050505050565b6001600160a01b0381168114610a4657600080fd5b50565b600080600080600060808688031215610a6157600080fd5b8535610a6c81610a31565b9450602086013567ffffffffffffffff80821115610a8957600080fd5b818801915088601f830112610a9d57600080fd5b813581811115610aac57600080fd5b8960208260051b8501011115610ac157600080fd5b9699602092909201985095966040810135965060600135945092505050565b634e487b7160e01b600052601160045260246000fd5b600060018201610b0857610b08610ae0565b5060010190565b808201808211156108fc576108fc610ae0565b6001600160a01b0386811682526020808301879052604083018690526080606084018190528301849052600091859160a08501845b87811015610b7e578435610b6a81610a31565b841682529382019390820190600101610b57565b509a9950505050505050505050565b600060208284031215610b9f57600080fd5b81518015158114610baf57600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176108fc576108fc610ae0565b600082610c0057634e487b7160e01b600052601260045260246000fd5b50069056fea2646970667358221220356d0f9b1944791684a9a2e0b3ba426860b95b08b6f5250b2411b4c5bd45b73e64736f6c63430008180033";

type SavingsCirclesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SavingsCirclesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SavingsCircles__factory extends ContractFactory {
  constructor(...args: SavingsCirclesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SavingsCircles & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SavingsCircles__factory {
    return super.connect(runner) as SavingsCircles__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SavingsCirclesInterface {
    return new Interface(_abi) as SavingsCirclesInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SavingsCircles {
    return new Contract(address, _abi, runner) as unknown as SavingsCircles;
  }
}
