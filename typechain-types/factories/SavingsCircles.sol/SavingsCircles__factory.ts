/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SavingsCircles,
  SavingsCirclesInterface,
} from "../../SavingsCircles.sol/SavingsCircles";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "organizer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "contribution",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "members",
        type: "address[]",
      },
    ],
    name: "CircleCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "completedRound",
        type: "uint256",
      },
    ],
    name: "CycleCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "round",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newMember",
        type: "address",
      },
    ],
    name: "MemberJoined",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "open",
        type: "bool",
      },
    ],
    name: "OpenToJoinSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "round",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Payout",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nextPayoutTime",
        type: "uint256",
      },
    ],
    name: "Restarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Terminated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "canPayout",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "members",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "contribution",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "periodSeconds",
        type: "uint256",
      },
    ],
    name: "createCircle",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getCircle",
    outputs: [
      {
        internalType: "address",
        name: "organizer",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "contribution",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "periodSeconds",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "members",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "currentIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nextPayoutTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "round",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "openToJoin",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "joinCircle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "restart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "open",
        type: "bool",
      },
    ],
    name: "setOpenToJoin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "terminate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalCircles",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600160005534801561001557600080fd5b50611274806100256000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806386d6cfb31161007157806386d6cfb31461012e5780639c67a19814610141578063b6b55f2514610154578063b90b553b14610167578063e11523431461018a578063e63e686b1461019d57600080fd5b80631801f38e146100ae57806361b8ce8c146100c357806364ccecde146100df5780637a828b28146101085780637b8ec3661461011b575b600080fd5b6100c16100bc366004610eee565b6101a5565b005b6100cc60005481565b6040519081526020015b60405180910390f35b6100f26100ed366004610eee565b6102c4565b6040516100d69a99989796959493929190610f07565b6100c1610116366004610eee565b6103a8565b6100cc610129366004610fc7565b61043c565b6100c161013c366004610eee565b610627565b6100c161014f36600461106c565b61075f565b6100c1610162366004610eee565b61084b565b61017a610175366004610eee565b610aa1565b60405190151581526020016100d6565b6100c1610198366004610eee565b610b60565b6100cc610dea565b6000818152600160205260409020600981015460ff166101e05760405162461bcd60e51b81526004016101d79061109c565b60405180910390fd5b80546001600160a01b031633146102095760405162461bcd60e51b81526004016101d7906110be565b60058101541561022b5760405162461bcd60e51b81526004016101d7906110e5565b60098101805461ff001916905560038101546102479042611121565b60068201556040516000815282907f6cfd9f3be022d590d5b4ffb779dd0033cb73548908f22505d5a675602d18ebd49060200160405180910390a2817ff7f9dd40fb7c61a0ff2dbaa93e5d03fe96aa9b61fc247bdb06c91ad4dfd6a11782600601546040516102b891815260200190565b60405180910390a25050565b6000818152600160208181526040808420805493810154600282015460038301546004840180548651818902810189019097528087526001600160a01b0398891699949098169792969195606095859485948594859492909183018282801561035657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610338575b505050505096508060050154955080600601549450806008015493508060090160009054906101000a900460ff1692508060090160019054906101000a900460ff169150509193959799509193959799565b600081815260016020526040902080546001600160a01b031633146103df5760405162461bcd60e51b81526004016101d7906110be565b6005810154156104015760405162461bcd60e51b81526004016101d7906110e5565b60098101805460ff1916905560405182907f9a9cad27a1bdce3d7cb0602aaf727dfaad03ba6524d9bca7b9615867fa6802b490600090a25050565b60006001600160a01b03861661047e5760405162461bcd60e51b81526020600482015260076024820152660746f6b656e3d360cc1b60448201526064016101d7565b60028410156104bb5760405162461bcd60e51b815260206004820152600960248201526836b2b6b132b9399e1960b91b60448201526064016101d7565b600083116104fc5760405162461bcd60e51b815260206004820152600e60248201526d0636f6e747269627574696f6e3d360941b60448201526064016101d7565b603c8210156105405760405162461bcd60e51b815260206004820152601060248201526f1c195c9a5bd9081d1bdbc81cdb585b1b60821b60448201526064016101d7565b60008054908061054f83611134565b9091555060008181526001602081905260409091208054336001600160a01b031991821617825591810180549092166001600160a01b038a161790915560028101859055600381018490559091506105ab600482018787610e76565b50600060058201556105bd8342611121565b60068201556000600882015560098101805461ffff19166001179055604051339083907f1b7faafd587ac3424c216f8622c311882e2f188d4cfe2269a5f19efb2d027cd690610615908b90899089908d908d9061114d565b60405180910390a35095945050505050565b6000818152600160205260409020600981015460ff166106595760405162461bcd60e51b81526004016101d79061109c565b6009810154610100900460ff1661069d5760405162461bcd60e51b81526020600482015260086024820152673737ba1037b832b760c11b60448201526064016101d7565b6106a78133610e0f565b156106e55760405162461bcd60e51b815260206004820152600e60248201526d30b63932b0b23c9036b2b6b132b960911b60448201526064016101d7565b6005810154156107075760405162461bcd60e51b81526004016101d7906110e5565b6004810180546001810182556000918252602082200180546001600160a01b03191633908117909155604051909184917f78da64a590c3052953ad9e0a5546bbf12bb68ae7634e3fb2a774e22a8c6557c19190a35050565b600082815260016020526040902080546001600160a01b031633146107965760405162461bcd60e51b81526004016101d7906110be565b600981015460ff166107ba5760405162461bcd60e51b81526004016101d79061109c565b81156107e2576005810154156107e25760405162461bcd60e51b81526004016101d7906110e5565b600981018054831580156101000261ff00199092169190911790915561080a57600060068201555b827f6cfd9f3be022d590d5b4ffb779dd0033cb73548908f22505d5a675602d18ebd48360405161083e911515815260200190565b60405180910390a2505050565b6000818152600160205260409020600981015460ff1661087d5760405162461bcd60e51b81526004016101d79061109c565b6108878133610e0f565b6108c05760405162461bcd60e51b815260206004820152600a6024820152693737ba1036b2b6b132b960b11b60448201526064016101d7565b6009810154610100900460ff161561090d5760405162461bcd60e51b815260206004820152601060248201526f3537b4b7103bb4b73237bb9037b832b760811b60448201526064016101d7565b60088101546000908152600782016020908152604080832033845290915290205460ff16156109685760405162461bcd60e51b8152602060048201526007602482015266616c726561647960c81b60448201526064016101d7565b600181015460028201546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156109c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109eb91906111b8565b610a2b5760405162461bcd60e51b81526020600482015260116024820152701d1c985b9cd9995c919c9bdb4819985a5b607a1b60448201526064016101d7565b6008810180546000908152600783016020908152604080832033808552925291829020805460ff19166001179055915460028401549151909185917fb7cac5b0031d5e68c72f4b2668a3ac6ac661109e52d629a1c57dae09f882e29a91610a959190815260200190565b60405180910390a45050565b6000818152600160205260408120600981015460ff16610ac45750600092915050565b8060060154421015610ad95750600092915050565b60005b6004820154811015610b5657816007016000836008015481526020019081526020016000206000836004018381548110610b1857610b186111dc565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff16610b4e575060009392505050565b600101610adc565b5060019392505050565b6000818152600160205260409020610b7782610aa1565b610baf5760405162461bcd60e51b81526020600482015260096024820152686e6f7420726561647960b81b60448201526064016101d7565b600081600401826005015481548110610bca57610bca6111dc565b6000918252602082200154600484015460028501546001600160a01b039092169350610bf5916111f2565b600184015460405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af1158015610c4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7091906111b8565b610cac5760405162461bcd60e51b815260206004820152600d60248201526c1d1c985b9cd9995c8819985a5b609a1b60448201526064016101d7565b816001600160a01b03168360080154857fb9784fd5c9ad4fac836b13940c6cdb47dff51b96c0d6b74e32b35be81c46f90984604051610ced91815260200190565b60405180910390a46001836008016000828254610d0a9190611121565b909155505060048301546005840154610d24906001611121565b610d2e9190611209565b60058401819055600003610dcf5760098301805461ff00191661010017905560006006840155600883015460405185917f5d6ce35d8b5a0cd1f552bd0ce68f81bf96eadebd1159905a8dd503fbbb02966091610d8c91815260200190565b60405180910390a26040516001815284907f6cfd9f3be022d590d5b4ffb779dd0033cb73548908f22505d5a675602d18ebd49060200160405180910390a2610de4565b6003830154610dde9042611121565b60068401555b50505050565b60008054600003610dfb5750600090565b6001600054610e0a919061122b565b905090565b6000805b6004840154811015610e6a57826001600160a01b0316846004018281548110610e3e57610e3e6111dc565b6000918252602090912001546001600160a01b031603610e62576001915050610e70565b600101610e13565b50600090505b92915050565b828054828255906000526020600020908101928215610ec9579160200282015b82811115610ec95781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190610e96565b50610ed5929150610ed9565b5090565b5b80821115610ed55760008155600101610eda565b600060208284031215610f0057600080fd5b5035919050565b6001600160a01b038b811682528a8116602080840191909152604083018b9052606083018a90526101406080840181905289519084018190526000926101608501928b810192855b81811015610f6d578451841686529482019493820193600101610f4f565b5050505050809150508660a08301528560c08301528460e0830152610f9761010083018515159052565b8215156101208301529b9a5050505050505050505050565b6001600160a01b0381168114610fc457600080fd5b50565b600080600080600060808688031215610fdf57600080fd5b8535610fea81610faf565b9450602086013567ffffffffffffffff8082111561100757600080fd5b818801915088601f83011261101b57600080fd5b81358181111561102a57600080fd5b8960208260051b850101111561103f57600080fd5b9699602092909201985095966040810135965060600135945092505050565b8015158114610fc457600080fd5b6000806040838503121561107f57600080fd5b8235915060208301356110918161105e565b809150509250929050565b602080825260089082015267696e61637469766560c01b604082015260600190565b6020808252600d908201526c3737ba1037b933b0b734bd32b960991b604082015260600190565b6020808252600c908201526b6e6f7420626f756e6461727960a01b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610e7057610e7061110b565b6000600182016111465761114661110b565b5060010190565b6001600160a01b0386811682526020808301879052604083018690526080606084018190528301849052600091859160a08501845b878110156111a957843561119581610faf565b841682529382019390820190600101611182565b509a9950505050505050505050565b6000602082840312156111ca57600080fd5b81516111d58161105e565b9392505050565b634e487b7160e01b600052603260045260246000fd5b8082028115828204841417610e7057610e7061110b565b60008261122657634e487b7160e01b600052601260045260246000fd5b500690565b81810381811115610e7057610e7061110b56fea264697066735822122083d74655573f08869d5e7d69196bec5b4c4f8809a8d22d9dc0fc09c41e70682364736f6c63430008180033";

type SavingsCirclesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SavingsCirclesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SavingsCircles__factory extends ContractFactory {
  constructor(...args: SavingsCirclesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SavingsCircles & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SavingsCircles__factory {
    return super.connect(runner) as SavingsCircles__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SavingsCirclesInterface {
    return new Interface(_abi) as SavingsCirclesInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SavingsCircles {
    return new Contract(address, _abi, runner) as unknown as SavingsCircles;
  }
}
